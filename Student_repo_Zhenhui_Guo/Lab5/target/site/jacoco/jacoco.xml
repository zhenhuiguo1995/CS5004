<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="CS5004 Assignment"><sessioninfo id="alfred-deepin-d9396532" start="1550341483731" dump="1550341483961"/><package name="edu/neu/ccs/cs5004/listOfIntegers"><class name="edu/neu/ccs/cs5004/listOfIntegers/Cons"><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;Ledu/neu/ccs/cs5004/listOfIntegers/List;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirst" desc="()Ljava/lang/Integer;" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRest" desc="()Ledu/neu/ccs/cs5004/listOfIntegers/List;" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()Ljava/lang/Integer;" line="43"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Ljava/lang/Boolean;" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Integer;)Ledu/neu/ccs/cs5004/listOfIntegers/List;" line="53"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="last" desc="()Ljava/lang/Integer;" line="58"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="69"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="81"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="98" covered="35"/><counter type="BRANCH" missed="20" covered="2"/><counter type="LINE" missed="12" covered="10"/><counter type="COMPLEXITY" missed="15" covered="6"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/neu/ccs/cs5004/listOfIntegers/InvalidCallException"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/neu/ccs/cs5004/listOfIntegers/Empty"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="16"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="27"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()Ljava/lang/Integer;" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Ljava/lang/Boolean;" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Integer;)Ledu/neu/ccs/cs5004/listOfIntegers/List;" line="48"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="last" desc="()Ljava/lang/Integer;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="14"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="InvalidCallException.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Empty.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="2" cb="0"/><line nr="17" mi="9" ci="0" mb="4" cb="0"/><line nr="18" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="14"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Cons.java"><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="2"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="2" cb="0"/><line nr="70" mi="9" ci="0" mb="4" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="13" ci="0" mb="6" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="16" ci="0" mb="4" cb="0"/><line nr="81" mi="9" ci="0" mb="2" cb="0"/><line nr="82" mi="13" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="98" covered="35"/><counter type="BRANCH" missed="20" covered="2"/><counter type="LINE" missed="12" covered="10"/><counter type="COMPLEXITY" missed="15" covered="6"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="124" covered="53"/><counter type="BRANCH" missed="26" covered="2"/><counter type="LINE" missed="18" covered="16"/><counter type="COMPLEXITY" missed="22" covered="11"/><counter type="METHOD" missed="9" covered="10"/><counter type="CLASS" missed="0" covered="3"/></package><counter type="INSTRUCTION" missed="124" covered="53"/><counter type="BRANCH" missed="26" covered="2"/><counter type="LINE" missed="18" covered="16"/><counter type="COMPLEXITY" missed="22" covered="11"/><counter type="METHOD" missed="9" covered="10"/><counter type="CLASS" missed="0" covered="3"/></report>